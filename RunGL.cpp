#define var GLfloat
//####################################################################################################################

#ifdef WIN32
        #define   glGenerateMipmap       glGenerateMipmapEXT
        #define   glGenFramebuffers      glGenFramebuffersEXT
        #define   glBindFramebuffer      glBindFramebufferEXT
        #define   glFramebufferTexture2D glFramebufferTexture2DEXT
         
        #define   STRICT
        #define   WIN32_LEAN_AND_MEAN
        #include <windows.h>
       // #include <iostream.h>
        #include <fstream.h>
        //using namespace std; //___used for string object

        //-----------------------------------------------------------------------------

        #include <GL/gl.h>
        #include <GL/glu.h>
        #include "headerFiles/glext.h"
        #include "headerFiles/glext_Init_A.cpp"


        
        void InitGL(void);
        void RenderGL(void);
        void KillALData(void);
        void ProcessKeyboard(void);
                
        var  viewWidth;
        var  viewHeight;
        
        //----------------------------------------------------------------------
        GLfloat  PassMouseMovement[2];

        //-------------------------------
        var keys[256], keypressed[256];
        bool mkeyIsReset = true;
        
        #include "cpp/WGL_ARB_multisample.h"
        //-------------------------------

        #include "headerFiles/VSync.h"
        
        #include <windows.h>

        void      ConfigureAndLoadTexture(GLubyte *textureData, GLint texWidth, GLint texHeight );
        #include "headerFiles/glaux.h"
        #include "headerFiles/FreeImage.h"
        #include "cpp/freeImage.cpp"
        //------------------------------------------


//####################################################################################################################

//####################################################################################################################




#endif

//####################################################################################################################

        GLfloat  PassTouchMovement[3];

//####################################################################################################################

bool sound_API_selector = 1;//_0_is_openAL_/_1_is_fMod


//####################################################################################################################
GLfloat adjust_w = 1.0;

#include <math.h>
  
//####################################################################################################################

#include "MATRIX_MATH.cpp"

//####################################################################################################################

//--------------------------------------------------------------------------------------------------------------
#define BUFFER_OFFSET(i) ((char *)0 + (i))
//----------------------------------------------------------------------------------------

        extern GLuint msaaFramebuffer;

        void RenderGL(void);
        void InitGL  (void);
        void shutDownGL(void);
      
        #ifdef __APPLE__
               var viewWidth;
               var viewHeight;
               GLuint  viewFramebuffer;
        #endif
          
        //-------------------------------------------------------------------------------


//#########################################################################################################


void ConfigureAndLoadTexture(GLubyte *textureData, GLint texWidth, GLint texHeight )
{

        #ifdef __APPLE__
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_MIRRORED_REPEAT);
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_MIRRORED_REPEAT);
        glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);
        //glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR_MIPMAP_NEAREST);
        glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, texWidth, texHeight, 0, GL_RGBA, GL_UNSIGNED_BYTE, textureData);
        glGenerateMipmap(GL_TEXTURE_2D);
        #endif
        
        #ifdef WIN32
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_MIRRORED_REPEAT);
        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_MIRRORED_REPEAT);
        glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_NEAREST);
        glTexParameterf(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR_MIPMAP_LINEAR);
        glTexParameteri( GL_TEXTURE_2D, GL_GENERATE_MIPMAP_SGIS, GL_TRUE );
        glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, texWidth, texHeight, 0, GL_BGRA, GL_UNSIGNED_BYTE, textureData);
        #endif
}

//===============================================================================================================================


var     modelView[16];
var     projection[16];
var     mvpMatrix[16];
var     mvpMatrixInverse[16];
var     lightMatrix[16];
var     moveSetMatrix[16];
var     ProjectionShadow[16];
var     modelViewShadow[16];
var     viewMatrix[16];

var     LightModelViewMatrix[16];


float   modelWorld[16];
float   LightView[16];
float   LightProjection[16];
float   modelViewInverse[16];

float   tempMatrix[16];

var     textureMatrix[16] = {   0.5f, 0.0f, 0.0f, 0.0f,
                                0.0f, 0.5f, 0.0f, 0.0f,
                                0.0f, 0.0f, 0.5f, 0.0f,
                                0.5f, 0.5f, 0.5f, 1.0f   };

var     inverseMatrix[16];


//============================================================================================================================



#include "GLOBALS.cpp"
                                           
                                           //====================================================================================                                                                
                                           #include "_MODEL_FOLDERS_/cube/cube_Globals.cpp"                                                                
                                           //====================================================================================                                                                
                                           #include "_MODEL_FOLDERS_/ball/ball_Globals.cpp"                                                                
                                           //==================================================================================== 
                                           #include "_MODEL_FOLDERS_/gem/gem_Globals.cpp"                                                                
                                           //====================================================================================    
   
   
//============================================================================================================================

void setupTransforms_MainColor(void)
{
        
        LoadIdentity(modelView);
        LookAt(modelView,    eyeposition[0],
                             eyeposition[1],
                             eyeposition[2],
                             lookAt[0],
                             lookAt[1],
                             lookAt[2],
                             upVector[0],
                             upVector[1],
                             upVector[2]);

        //--------------------------------------------------------------------------------------
        LoadIdentity(viewMatrix);
        AssignMatrix(viewMatrix, modelView);
        InvertMatrix(viewMatrix, viewMatrix);
        //--------------------------------------------------------------------------------------
        Translate(modelView, moveSet[0] , moveSet[1] , moveSet[2] );
        Rotate(modelView, 1.0, 0.0, 0.0, rotateModelWithLeftMouse[0]);
        Rotate(modelView, 0.0, 1.0, 0.0, rotateModelWithLeftMouse[1]);
}

//============================================================================================================================

var shaderNumber = 0;

void SelectShader(var shaderNumber)
{
        
        //--------------------------------------------------------------------------------------
        if(shaderNumber == 26)
        {
                        #include "_SHADERS/plastic/rubber/rubber_SHADER_RENDER.cpp"
        }
        //--------------------------------------------------------------------------------------

   
}

//################################################################################################################################
//################################################################################################################################
//################################################################################################################################



void InitGL( void )//__BEGIN_INIT__@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
{
        //==========================================================================
        #ifdef WIN32
            #include "cpp/setPixelFormat.cpp"
            #include "headerFiles/glext_Init_B.cpp"

            //-------------------------------------
            SetVSyncState(true);
            //-------------------------------------
            PassMouseMovement[0]        = rotateModelWithLeftMouse[0];
            PassMouseMovement[1]        = rotateModelWithLeftMouse[1];
        

        //=================
        #endif

                                              //=================================================================================================================
                                              #include "_SHADERS/plastic/rubber/rubber_SHADER_INIT.cpp"
                                              //====================================================================================                                                                
                                              #include "_MODEL_FOLDERS_/cube/cube_Init.cpp"                                                                   
                                              //====================================================================================                                                                
                                              #include "_MODEL_FOLDERS_/ball/ball_Init.cpp"                                                                   
                                              //====================================================================================                                                                
                                              #include "_MODEL_FOLDERS_/gem/gem_Init.cpp"                                                                   
                                              //====================================================================================                                                                



//====================================================================================================================================
    

        glEnable(GL_DEPTH_TEST);
    //glDepthFunc(GL_LEQUAL);
    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
    //glAlphaFunc(GL_GREATER, 0.1);
    glEnable(GL_CULL_FACE);
    glCullFace(GL_BACK);
        
//====================================================================================================================================

    



}//__END_INIT__@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



//#####################################################################################################################################
//#####################################################################################################################################
//#####################################################################################################################################
//#####################################################################################################################################


void RenderGL(void)
{
       
        
        
        
                        #ifdef __APPLE__   
                        //***************************************************************
                        //eyeposition[0] -= PassTouchMovement[0];
                        //eyeposition[1] -= PassTouchMovement[1];
                        //eyeposition[2] -= PassTouchMovement[2];                   
                        
                        //PassTouchMovement[0] = 0.0;
                        //PassTouchMovement[1] = 0.0;
                        //PassTouchMovement[2] = 0.0;
                        //***************************************************************
                        #endif               
        
                        #ifdef WIN32  
                        //***************************************************************
                        rotateModelWithLeftMouse[0] = PassMouseMovement[0];
                        rotateModelWithLeftMouse[1] = PassMouseMovement[1];
                        //***************************************************************
                        #endif            
           
        
#ifdef __APPLE__
        glBindFramebuffer(GL_FRAMEBUFFER, msaaFramebuffer);
#endif       
        //=====================================================================   

        //=======================================================================================================================
        glClearColor( 0.0f, 0.0f, 0.0f, 1.0 );
        glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT);
        //----------------------------------------------------------------------------------
        
           //=======================================================================================================================
        #ifdef WIN32
                
                //-------------------------------------------------------------------------------------------------------               
                glViewport(0, 0, (GLsizei)viewWidth, (GLsizei)viewHeight);
                PerspectiveMatrix(projection, fieldOfView, (GLfloat)viewWidth / (GLfloat)viewHeight, adjustNearFar[0],  adjustNearFar[1]);
                //-------------------------------------------------------------------------------------------------------          
        #endif
        //=======================================================================================================================
     
        //=======================================================================================================================
        #ifdef __APPLE__
                
                //-------------------------------------------------------------------------------------------------------               
                glViewport(0, 0, (GLsizei)viewWidth, (GLsizei)viewHeight);
                PerspectiveMatrix(projection, fieldOfView, (GLfloat)viewWidth / (GLfloat)viewHeight, adjustNearFar[0],  adjustNearFar[1]);
                //-------------------------------------------------------------------------------------------------------  
                Rotate(projection, 0.0, 0.0, 1.0, -90.0);//_____FOR_iOS_LANDSCAPE_VIEW 
                //-------------------------------------------------------------------------------------------------------          
        #endif
        //=======================================================================================================================

    
        
       //=======================================================================================================
        shaderNumber = 26;//plastic/rubber/
        setupTransforms_MainColor();                                                            
        //#include "_MODEL_FOLDERS_/cube/cube_Render.cpp"                                                                 
        //====================================================================================                                                                
        shaderNumber = 26;//plastic/rubber/
        setupTransforms_MainColor();          
        //#include "_MODEL_FOLDERS_/ball/ball_Render.cpp"                                                                 
        //====================================================================================                                                                
        shaderNumber = 26;//plastic/rubber/
        setupTransforms_MainColor();          
        #include "_MODEL_FOLDERS_/gem/gem_Render.cpp"                                                                 
        //====================================================================================    
      
        
        
        
}//_END_RenderGL()


//####################################################################################################################################
//####################################################################################################################################
//####################################################################################################################################
//####################################################################################################################################

#ifdef WIN32
void ProcessKeyboard(void)
{

    //=======================================================================================


    //==================================================================================================================================
 
  
    if(keys[VK_F8])
    {
         ofstream outSettings("settings.cpp");
             

         outSettings << "var           eyeposition[]      =  {"   
                                    << eyeposition[0]     << ", "
                                    << eyeposition[1]     << ", "
                                    << eyeposition[2]     << ", 0.0};\n";                
         //------------------------------------------------------------------------------------------------------------------------------
         outSettings << "var           lookAt[]        =  {"   
                                    << lookAt[0]       << ", "
                                    << lookAt[1]       << ", "
                                    << lookAt[2]       << ", 0.0};\n";             
         //------------------------------------------------------------------------------------------------------------------------------
         outSettings << "var           rotateModelWithLeftMouse[]       =  {"   
                                    << rotateModelWithLeftMouse[0]      << ", "
                                    << rotateModelWithLeftMouse[1]      << "};\n\n"; 
         //------------------------------------------------------------------------------------------------------------------------------
      
    }
      
      
    //====================================================================================================================================
 
 
//=======================================================================================
    if (keys['A'] && !keys[VK_SHIFT])
	{
          eyeposition[0] += 0.15;
          //lookAt[0]      -= 0.15;
    }	
//-----------------------------------     
    if (keys['D'] && !keys[VK_SHIFT])
	{
          eyeposition[0] -= 0.15;
          //lookAt[0]      += 0.15;    
    }
//=================================== 
    if (keys['S'] && !keys[VK_SHIFT])
	{
          eyeposition[1] += 0.15;
          //lookAt[1]      -= 0.15;   
    }
//-----------------------------------	
    if (keys['W'] && !keys[VK_SHIFT])
	{
          eyeposition[1] -= 0.15;       
          //lookAt[1]      += 0.15;    
//-----------------------------------  
    }    
    if (keys['Q'] && !keys[VK_SHIFT])
	{
          eyeposition[2] += 0.15;      
          //lookAt[2]       -= 0.15;     
    }
//===================================   
    if (keys['E'] && !keys[VK_SHIFT])
	{
          eyeposition[2] -= 0.15;
          //lookAt[2]      += 0.15;     
    }
//===================================  	


     
}//_END_ProcessKeyboard()
#endif


//#####################################################################################################################################
//#####################################################################################################################################
//#####################################################################################################################################
//#####################################################################################################################################



void shutDownGL( void )
{
     

//###########################################################################################################################################

        //====================================================================================
        #include "_MODEL_FOLDERS_/flowerShield/flowerShield_SHUTDOWN.cpp"
        //====================================================================================
        #include "_MODEL_FOLDERS_/cube/cube_Shutdown.cpp"                                                               
        //====================================================================================                                                                
        #include "_MODEL_FOLDERS_/ball/ball_Shutdown.cpp"                                                               
        //====================================================================================                                                                



}
//=====================================================================================================================================
//-------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------
//=====================================================================================================================================



